{############################################################################ 
	Dress up the Kuin --- module Color  ver 2017.11.30

	Created by @satonayu
		http://hime.be/
		http://twitter.com/satonayu
	
    License: くいなちゃんライセンス( http://kuina.ch/others/license )
############################################################################}

; ARGBの値からsRGB空間の値を生成
+func srgb(a: int, r: int, g: int, b: int): int
	ret   (a.clamp(0, 255) $ bit32).shl(3 * 8)
	| .or((r.clamp(0, 255) $ bit32).shl(2 * 8))
	| .or((g.clamp(0, 255) $ bit32).shl(1 * 8))
	| .or( b.clamp(0, 255) $ bit32) $ int
end func


; リニア空間の色情報からsRGB空間のの値を生成
+func linear(a: float, r: float, g: float, b: float): int
	ret @srgb(@ltos(a), @ltos(r), @ltos(g), @ltos(b))
end func


; Extract alpha value
+func a(color: int): int
	ret (color $ bit32).shr(3 * 8).and(16#FFb32) $ int
end func


; Extract red value
+func r(color: int): int
	ret (color $ bit32).shr(2 * 8).and(16#FFb32) $ int
end func


; Extract green value
+func g(color: int): int
	ret (color $ bit32).shr(1 * 8).and(16#FFb32) $ int
end func


; Extract blue value
+func b(color: int): int
	ret (color $ bit32).and(16#FFb32) $ int
end func


; set alpha value
+func setA(color: int, value: int): int
	ret (color $ bit32).and(16#00FFFFFFb32)
	| .or((value.clamp(0, 255) $ bit32).shl(3 * 8)) $ int
end func


; set red value
+func setR(color: int, value: int): int
	ret (color $ bit32).and(16#FF00FFFFb32)
	| .or((value.clamp(0, 255) $ bit32).shl(2 * 8)) $ int
end func


; set green value
+func setG(color: int, value: int): int
	ret (color $ bit32).and(16#FFFF00FFb32)
	| .or((value.clamp(0, 255) $ bit32).shl(1 * 8)) $ int
end func


; set blue value
+func setB(color: int, value: int): int
	ret (color $ bit32).and(16#FFFFFF00b32)
	| .or((value.clamp(0, 255) $ bit32)) $ int
end func


; StandardRGB to LinearRGB
+func stol(value: int): float
	ret (value.clamp(0, 255) $ float) / 255.0
end func


; LinearRGB to StandardRGB
+func ltos(value: float): int
	ret (value.clamp(0.0, 1.0) * 255.0) $ int
end func



; ######## Color name constant ########
+const transparent          : int :: 16#00000000
+const semitransparent      : int :: 16#7F000000

; Color name 140 pattern
+const white                : int :: 16#FFFFFFFF
+const whitesmoke           : int :: 16#FFF5F5F5
+const ghostwhite           : int :: 16#FFF8F8FF
+const aliceblue            : int :: 16#FFF0F8FF
+const lavendar             : int :: 16#FFE6E6FA
+const azure                : int :: 16#FFF0FFFF
+const lightcyan            : int :: 16#FFE0FFFF
+const mintcream            : int :: 16#FFF5FFFA
+const honeydew             : int :: 16#FFF0FFF0
+const ivory                : int :: 16#FFFFFFF0
+const beige                : int :: 16#FFF5F5DC
+const lightyellow          : int :: 16#FFFFFFE0
+const lightgoldenrodyellow : int :: 16#FFFAFAD2
+const lemonchiffon         : int :: 16#FFFFFACD
+const floralwhite          : int :: 16#FFFFFAF0
+const oldlace              : int :: 16#FFFDF5E6
+const cornsilk             : int :: 16#FFFFF8DC
+const papayawhite          : int :: 16#FFFFEFD5
+const blanchedalmond       : int :: 16#FFFFEBCD
+const bisque               : int :: 16#FFFFE4C4
+const snow                 : int :: 16#FFFFFAFA
+const linen                : int :: 16#FFFAF0E6
+const antiquewhite         : int :: 16#FFFAEBD7
+const seashell             : int :: 16#FFFFF5EE
+const lavenderblush        : int :: 16#FFFFF0F5
+const mistyrose            : int :: 16#FFFFE4E1
+const gainsboro            : int :: 16#FFDCDCDC
+const lightgray            : int :: 16#FFD3D3D3
+const lightsteelblue       : int :: 16#FFB0C4DE
+const lightblue            : int :: 16#FFADD8E6
+const lightskyblue         : int :: 16#FF87CEFA
+const powderblue           : int :: 16#FFB0E0E6
+const paleturquoise        : int :: 16#FFAFEEEE
+const skyblue              : int :: 16#FF87CEEB
+const mediumaquamarine     : int :: 16#FF66CDAA
+const aquamarine           : int :: 16#FF7FFFD4
+const palegreen            : int :: 16#FF98FB98
+const lightgreen           : int :: 16#FF90EE90
+const khaki                : int :: 16#FFF0E68C
+const palegoldenrod        : int :: 16#FFEEE8AA
+const moccasin             : int :: 16#FFFFE4B5
+const navajowhite          : int :: 16#FFFFDEAD
+const peachpuff            : int :: 16#FFFFDAB9
+const wheat                : int :: 16#FFF5DEB3
+const pink                 : int :: 16#FFFFC0CB
+const lightpink            : int :: 16#FFFFB6C1
+const thistle              : int :: 16#FFD8BFD8
+const plum                 : int :: 16#FFDDA0DD
+const silver               : int :: 16#FFC0C0C0
+const darkgray             : int :: 16#FFA9A9A9
+const lightslategray       : int :: 16#FF778899
+const slategray            : int :: 16#FF708090
+const slateblue            : int :: 16#FF6A5ACD
+const steelblue            : int :: 16#FF4682B4
+const mediumslateblue      : int :: 16#FF7B68EE
+const royalblue            : int :: 16#FF4169E1
+const blue                 : int :: 16#FF0000FF
+const dodgerblue           : int :: 16#FF1E90FF
+const cornflowerblue       : int :: 16#FF6495ED
+const deepskyblue          : int :: 16#FF00BFFF
+const cyan                 : int :: 16#FF00FFFF
+const aqua                 : int :: 16#FF00FFFF
+const turquoise            : int :: 16#FF40E0D0
+const mediumturquoise      : int :: 16#FF48D1CC
+const darkturquoise        : int :: 16#FF00CED1
+const lightseagreen        : int :: 16#FF20B2AA
+const mediumspringgreen    : int :: 16#FF00FA9A
+const springgreen          : int :: 16#FF00FF7F
+const lime                 : int :: 16#FF00FF00
+const limegreen            : int :: 16#FF32CD32
+const yellowgreen          : int :: 16#FF9ACD32
+const lawngreen            : int :: 16#FF7CFC00
+const chartreuse           : int :: 16#FF7FFF00
+const greenyellow          : int :: 16#FFADFF2F
+const yellow               : int :: 16#FFFFFF00
+const gold                 : int :: 16#FFFFD700
+const orange               : int :: 16#FFFFA500
+const darkorange           : int :: 16#FFFF8C00
+const goldenrod            : int :: 16#FFDAA520
+const burlywood            : int :: 16#FFDEB887
+const tan                  : int :: 16#FFD2B48C
+const sandybrown           : int :: 16#FFF4A460
+const darksalmon           : int :: 16#FFE9967A
+const lightcoral           : int :: 16#FFF08080
+const salmon               : int :: 16#FFFA8072
+const lightsalmon          : int :: 16#FFFFA07A
+const coral                : int :: 16#FFFF7F50
+const tomato               : int :: 16#FFFF6347
+const orangered            : int :: 16#FFFF4500
+const red                  : int :: 16#FFFF0000
+const deeppink             : int :: 16#FFFF1493
+const hotpink              : int :: 16#FFFF69B4
+const palevioletred        : int :: 16#FFDB7093
+const violet               : int :: 16#FFEE82EE
+const orchid               : int :: 16#FFDA70D6
+const magenta              : int :: 16#FFFF00FF
+const fuchsia              : int :: 16#FFFF00FF
+const mediumorchid         : int :: 16#FFBA55D3
+const darkorchid           : int :: 16#FF9932CC
+const darkviolet           : int :: 16#FF9400D3
+const blueviolet           : int :: 16#FF8A2BE2
+const mediumpurple         : int :: 16#FF9370DB
+const gray                 : int :: 16#FF808080
+const mediumblue           : int :: 16#FF0000CD
+const darkcyan             : int :: 16#FF008B8B
+const cadetblue            : int :: 16#FF5F9EA0
+const darkseagreen         : int :: 16#FF8FBC8F
+const mediumseagreen       : int :: 16#FF3CB371
+const teal                 : int :: 16#FF008080
+const forestgreen          : int :: 16#FF228B22
+const seagreen             : int :: 16#FF2E8B57
+const darkkhaki            : int :: 16#FFBDB76B
+const peru                 : int :: 16#FFCD853F
+const crimson              : int :: 16#FFDC143C
+const indianred            : int :: 16#FFCD5C5C
+const rosybrown            : int :: 16#FFBC8F8F
+const mediumvioletred      : int :: 16#FFC71585
+const dimgray              : int :: 16#FF696969
+const black                : int :: 16#FF000000
+const midnightblue         : int :: 16#FF191970
+const darkslateblue        : int :: 16#FF483D8B
+const darkblue             : int :: 16#FF00008B
+const navy                 : int :: 16#FF000080
+const darkslategray        : int :: 16#FF2F4F4F
+const green                : int :: 16#FF008000
+const darkgreen            : int :: 16#FF006400
+const darkolivegreen       : int :: 16#FF556B2F
+const olivedrab            : int :: 16#FF6B8E23
+const olive                : int :: 16#FF808000
+const darkgoldenrod        : int :: 16#FFB8860B
+const chocolate            : int :: 16#FFD2691E
+const sienna               : int :: 16#FFA0522D
+const saddlebrown          : int :: 16#FF8B4513
+const firebrick            : int :: 16#FFB22222
+const brown                : int :: 16#FFA52A2A
+const maroon               : int :: 16#FF800000
+const darkred              : int :: 16#FF8B0000
+const darkmagenta          : int :: 16#FF8B008B
+const purple               : int :: 16#FF800080
+const indigo               : int :: 16#FF4B0082
